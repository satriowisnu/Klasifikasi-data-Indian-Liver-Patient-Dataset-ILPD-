> dataset = read.csv('Indian Liver Patient Dataset (ILPD).csv')
> View(dataset)
> # Encoding the target feature as factor
> dataset$Famale = factor(dataset$Famale, levels = c(2, 1))
Error in `$<-.data.frame`(`*tmp*`, Famale, value = integer(0)) : 
  replacement has 0 rows, data has 582
> # Encoding the target feature as factor
> dataset$X1 = factor(dataset$X1, levels = c(2, 1))
> # Splitting the dataset into the Training set and Test set
> # install.packages('caTools')
> library(caTools)
> set.seed(123)
> split = sample.split(dataset$X1, SplitRatio = 0.75)
> training_set = subset(dataset, split == TRUE)
> test_set = subset(dataset, split == FALSE)
> # Feature Scaling
> training_set[-1] = scale(training_set[-1])
Error in colMeans(x, na.rm = TRUE) : 'x' must be numeric
> # Feature Scaling
> training_set[1] = scale(training_set[1])
> test_set[1] = scale(test_set[1])
> # Fitting Naive Bayes to the Training set
> library(e1071)
> classifier = naiveBayes(x = training_set[-3],
+                         y = training_set$X1) 
> # Predicting the Test set results
> y_pred = predict(classifier, newdata = test_set[-3])
> y_pred
  [1] 1 1 1 1 2 1 1 1 1 1 2 2 1 1 1 1 2 1 2 1 1 1 1 1 1 1 1 2 2 1 1 1
 [33] 1 1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 2 2 1 2 1 1 2 1 1 1 2 1 1
 [65] 1 1 1 2 2 1 1 1 2 1 2 1 2 2 1 1 1 2 1 1 2 2 1 1 1 2 1 1 1 2 2 1
 [97] 2 1 1 1 1 2 1 1 2 2 2 1 1 1 1 2 2 1 1 2 1 1 1 2 2 1 1 1 1 1 1 2
[129] 1 2 1 1 2 1 2 1 1 1 1 1 1 1 1 1 2 2
Levels: 2 1
> # Making the Confusion Matrix
> cm = table(test_set[, 3], y_pred)
> cm
      y_pred
        2  1
  0.5   1  0
  0.6   4  6
  0.7  10  7
  0.8  13 16
  0.9   3  8
  1     3  2
  1.1   1  4
  1.2   0  2
  1.3   1  1
  1.4   2  3
  1.5   1  0
  1.6   2  0
  1.7   0  4
  1.8   1  2
  2     0  2
  2.2   0  4
  2.3   0  1
  2.4   0  1
  2.6   1  0
  2.8   0  1
  2.9   0  5
  3     0  1
  3.1   0  2
  3.5   0  1
  3.9   0  3
  4.1   0  2
  4.2   0  1
  4.9   0  1
  5.2   0  1
  5.7   0  1
  5.8   0  2
  6.7   0  1
  6.8   0  1
  7.3   0  1
  8.6   0  1
  8.7   0  1
  10.6  0  1
  11.1  0  1
  12.7  0  1
  16.4  0  1
  16.7  0  1
  17.7  0  1
  18    0  1
  18.4  0  1
  18.5  0  1
  20.2  0  1
  22.5  0  1
  22.6  0  1
  23.3  0  1
  30.8  0  1